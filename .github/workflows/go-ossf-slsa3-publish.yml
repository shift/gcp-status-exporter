# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow lets you compile your Go project using a SLSA3 compliant builder.
# This workflow will generate a so-called "provenance" file describing the steps
# that were performed to generate the final binary.
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

name: SLSA Go releaser
on:
  workflow_dispatch:
  release:
    types: [created]

permissions: read-all

jobs:
  # ========================================================================================================================================
  #     Prerequesite: Create a .slsa-goreleaser.yml in the root directory of your project.
  #       See format in https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/go/README.md#configuration-file
  #=========================================================================================================================================
  build:
    permissions:
      id-token: write # To sign.
      contents: write # To upload release assets.
      actions: read   # To read workflow path.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.0.0
    with:
      go-version: 1.22.5
      # =============================================================================================================
      #     Optional: For more options, see https://github.com/slsa-framework/slsa-github-generator#golang-projects
      # =============================================================================================================

  build_and_push:
    runs-on: ubuntu-latest
    needs: build  # Wait for the release job to finish
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all tags and branches (needed for Go modules)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build OCI Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Containerfile  # Or path to your Dockerfile
          push: false  # Build only for now
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.ref_name }}
          cache-from: type=gha  # Enable layer caching
          cache-to: type=gha,mode=max  # Optimize cache retention

      - name: Push OCI Image
        uses: docker/build-push-action@v3
        with:
          push: true  # Now push the image
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.ref_name }}
        
